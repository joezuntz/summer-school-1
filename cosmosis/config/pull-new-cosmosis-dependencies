#!/usr/bin/env bash

# Exit with an error message.
function die()
{
  echo "$1"
  exit 1
}


# Do platform detection. An unknown platform causes immediate failure.
function get_platform()
{
  platform="unknown"
  macos="no"
  case $(uname -s) in
    Darwin) 
      echo "This script updates dependencies for Linux builds of CosmoSIS."
      echo "For macOS, please update Homebrew-installed and pip-installed"
      echo "products using the procedures provided by Homebrew and pip"
      ;;
    Linux)
      plat_id=$(lsb_release -si)
      plat_release=$(lsb_release -sr)
      if grep -sqi "release 6" /etc/redhat-release
      then
        platform="slf6"
      elif grep -sqi "release 7" /etc/redhat-release
      then
        platform="slf7"
      elif [ "${plat_id}" == "Ubuntu" ] && [ "${plat_release}" == "14.04" ]
      then
        platform="u14"
      elif [ "${plat_id}" == "Ubuntu" ] && [ "${plat_release}" == "16.04" ]
      then
        platform="u16"
      elif [ "${plat_id}" == "Ubuntu" ] && [ "${plat_release}" == "18.04" ]
      then
        platform="u18"
      else
        echo "Sorry, this bootstrap works only for CentOS {6,7} and Ubuntu {16.04, 18.04}"
        echo "Linux distributions. Please see the CosmoSIS wiki for installation on other systems."
        die "Unable to continue on non-supported distribution."
      fi
      ;;
  esac

  if [ "unknown" == "$platform" ]
  then
    die "Sorry - we do not support your OS [$platform].  See the cosmosis wiki for supported systems"
  fi
  echo ${platform}
}


arg_values=($(sed -e 's/ -q/ /g' -e 's/:/ /g' config/cosmosis_ups_vers))
platform=$(get_platform)
./config/pullProducts "$PWD/ups" "$platform" cosmosis_ups-"${arg_values[0]}" \
                 "${arg_values[@]:1}"
